{"version":3,"sources":["../esm2015/src/ngx-json-viewer/ngx-json-viewer.component.ts","../src/ngx-json-viewer.module.ts"],"names":["NgxJsonViewerComponent","this","expanded","depth","_currentDepth","segments","prototype","ngOnChanges","_this","json","decycle","Object","keys","forEach","key","push","parseKeyValue","isExpandable","segment","type","toggle","value","undefined","description","isExpanded","Array","isArray","length","JSON","stringify","Date","object","objects","WeakMap","derez","path","old_path","nu","Boolean","Number","RegExp","String","get","$ref","set","element","i","name","Component","args","selector","template","Input","NgModule","imports","CommonModule","declarations","exports"],"mappings":"6YAUA,SAAAA,IAQWC,KAAAC,UAAW,EACXD,KAAAE,OAAS,EAETF,KAAAG,eAAiB,EAE1BH,KAAAI,SAAsB,UAEtBL,EAAAM,UAAAC,YAAA,WAAA,IAAAC,EAAAP,KACEA,KAAKI,SAAW,GAGhBJ,KAAKQ,KAAOR,KAAKS,QAAQT,KAAKQ,MAE9BR,KAAKG,gBAEoB,iBAAdH,KAAKQ,KACdE,OAAOC,KAAKX,KAAKQ,MAAMI,SAAQ,SAAAC,GAC7BN,EAAKH,SAASU,KAAKP,EAAKQ,cAAcF,EAAKN,EAAKC,KAAKK,QAGvDb,KAAKI,SAASU,KAAKd,KAAKe,cAAc,WAAWf,KAAKQ,KAAI,IAAKR,KAAKQ,QAIxET,EAAAM,UAAAW,aAAA,SAAaC,GACX,MAAwB,WAAjBA,EAAQC,MAAsC,UAAjBD,EAAQC,MAG9CnB,EAAAM,UAAAc,OAAA,SAAOF,GACDjB,KAAKgB,aAAaC,KACpBA,EAAQhB,UAAYgB,EAAQhB,WAIxBF,EAAAM,UAAAU,cAAA,SAAcF,EAAUO,GAC9B,IAAMH,EAAmB,CACvBJ,IAAKA,EACLO,MAAOA,EACPF,UAAMG,EACNC,YAAa,GAAKF,EAClBnB,SAAUD,KAAKuB,cAGjB,cAAeN,EAAQG,OACrB,IAAK,SACHH,EAAQC,KAAO,SACf,MAEF,IAAK,UACHD,EAAQC,KAAO,UACf,MAEF,IAAK,WACHD,EAAQC,KAAO,WACf,MAEF,IAAK,SACHD,EAAQC,KAAO,SACfD,EAAQK,YAAc,IAAML,EAAQG,MAAQ,IAC5C,MAEF,IAAK,YACHH,EAAQC,KAAO,YACfD,EAAQK,YAAc,YACtB,MAEF,IAAK,SAEmB,OAAlBL,EAAQG,OACVH,EAAQC,KAAO,OACfD,EAAQK,YAAc,QACbE,MAAMC,QAAQR,EAAQG,QAC/BH,EAAQC,KAAO,QACfD,EAAQK,YAAc,SAAWL,EAAQG,MAAMM,OAAS,KAAOC,KAAKC,UAAUX,EAAQG,QAC7EH,EAAQG,iBAAiBS,KAClCZ,EAAQC,KAAO,QAEfD,EAAQC,KAAO,SACfD,EAAQK,YAAc,UAAYK,KAAKC,UAAUX,EAAQG,QAM/D,OAAOH,GAGDlB,EAAAM,UAAAkB,WAAA,WACN,OACEvB,KAAKC,YACHD,KAAKE,OAAS,GAAKF,KAAKG,eAAiBH,KAAKE,QAK5CH,EAAAM,UAAAI,QAAA,SAAQqB,GACd,IAAMC,EAAU,IAAIC,QACpB,OAAQ,SAASC,EAAMb,EAAOc,GAC5B,IAAIC,EACAC,EAEJ,MACmB,iBAAVhB,GACM,OAAVA,GACEA,aAAiBiB,SACjBjB,aAAiBS,MACjBT,aAAiBkB,QACjBlB,aAAiBmB,QACjBnB,aAAiBoB,OAwBjBpB,OArBYC,KADjBc,EAAWJ,EAAQU,IAAIrB,IAEd,CAACsB,KAAMP,IAEhBJ,EAAQY,IAAIvB,EAAOc,GAEfV,MAAMC,QAAQL,IAChBgB,EAAK,GACLhB,EAAMR,SAAQ,SAAUgC,EAASC,GAC/BT,EAAGS,GAAKZ,EAAMW,EAASV,EAAO,IAAMW,EAAI,UAG1CT,EAAK,GACL1B,OAAOC,KAAKS,GAAOR,SAAQ,SAAUkC,GACnCV,EAAGU,GAAQb,EACTb,EAAM0B,GACNZ,EAAO,IAAMP,KAAKC,UAAUkB,GAAQ,SAInCV,GAjCX,CAoCEN,EAAQ,+BA7IbiB,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kBACVC,SAAA,45FAKCC,EAAAA,wBACAA,EAAAA,qBACAA,EAAAA,6BAEAA,EAAAA,eCLH,iCAXCC,EAAAA,SAAQJ,KAAA,CAAC,CACRK,QAAS,CACPC,EAAAA,cAEFC,aAAc,CACZxD,GAEFyD,QAAS,CACPzD","sourcesContent":["import { Component, OnChanges, Input } from '@angular/core';\n\nexport interface Segment {\n  key: string;\n  value: any;\n  type: undefined | string;\n  description: string;\n  expanded: boolean;\n}\n\n@Component({\n  selector: 'ngx-json-viewer',\n  templateUrl: './ngx-json-viewer.component.html',\n  styleUrls: ['./ngx-json-viewer.component.scss']\n})\nexport class NgxJsonViewerComponent implements OnChanges {\n\n  @Input() json: any;\n  @Input() expanded = true;\n  @Input() depth = -1;\n\n  @Input() _currentDepth = -1;\n\n  segments: Segment[] = [];\n\n  ngOnChanges() {\n    this.segments = [];\n\n    // remove cycles\n    this.json = this.decycle(this.json);\n\n    this._currentDepth++;\n\n    if (typeof this.json === 'object') {\n      Object.keys(this.json).forEach(key => {\n        this.segments.push(this.parseKeyValue(key, this.json[key]));\n      });\n    } else {\n      this.segments.push(this.parseKeyValue(`(${typeof this.json})`, this.json));\n    }\n  }\n\n  isExpandable(segment: Segment) {\n    return segment.type === 'object' || segment.type === 'array';\n  }\n\n  toggle(segment: Segment) {\n    if (this.isExpandable(segment)) {\n      segment.expanded = !segment.expanded;\n    }\n  }\n\n  private parseKeyValue(key: any, value: any): Segment {\n    const segment: Segment = {\n      key: key,\n      value: value,\n      type: undefined,\n      description: '' + value,\n      expanded: this.isExpanded()\n    };\n\n    switch (typeof segment.value) {\n      case 'number': {\n        segment.type = 'number';\n        break;\n      }\n      case 'boolean': {\n        segment.type = 'boolean';\n        break;\n      }\n      case 'function': {\n        segment.type = 'function';\n        break;\n      }\n      case 'string': {\n        segment.type = 'string';\n        segment.description = '\"' + segment.value + '\"';\n        break;\n      }\n      case 'undefined': {\n        segment.type = 'undefined';\n        segment.description = 'undefined';\n        break;\n      }\n      case 'object': {\n        // yea, null is object\n        if (segment.value === null) {\n          segment.type = 'null';\n          segment.description = 'null';\n        } else if (Array.isArray(segment.value)) {\n          segment.type = 'array';\n          segment.description = 'Array[' + segment.value.length + '] ' + JSON.stringify(segment.value);\n        } else if (segment.value instanceof Date) {\n          segment.type = 'date';\n        } else {\n          segment.type = 'object';\n          segment.description = 'Object ' + JSON.stringify(segment.value);\n        }\n        break;\n      }\n    }\n\n    return segment;\n  }\n\n  private isExpanded(): boolean {\n    return (\n      this.expanded &&\n      !(this.depth > -1 && this._currentDepth >= this.depth)\n    );\n  }\n\n  // https://github.com/douglascrockford/JSON-js/blob/master/cycle.js\n  private decycle(object: any) {\n    const objects = new WeakMap();\n    return (function derez(value, path) {\n      let old_path;\n      let nu: any;\n\n      if (\n        typeof value === 'object'\n        && value !== null\n        && !(value instanceof Boolean)\n        && !(value instanceof Date)\n        && !(value instanceof Number)\n        && !(value instanceof RegExp)\n        && !(value instanceof String)\n      ) {\n        old_path = objects.get(value);\n        if (old_path !== undefined) {\n          return {$ref: old_path};\n        }\n        objects.set(value, path);\n\n        if (Array.isArray(value)) {\n          nu = [];\n          value.forEach(function (element, i) {\n            nu[i] = derez(element, path + '[' + i + ']');\n          });\n        } else {\n          nu = {};\n          Object.keys(value).forEach(function (name) {\n            nu[name] = derez(\n              value[name],\n              path + '[' + JSON.stringify(name) + ']'\n            );\n          });\n        }\n        return nu;\n      }\n      return value;\n    }(object, '$'));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxJsonViewerComponent } from './ngx-json-viewer/ngx-json-viewer.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NgxJsonViewerComponent\n  ],\n  exports: [\n    NgxJsonViewerComponent\n  ]\n})\nexport class NgxJsonViewerModule { }\n"]}